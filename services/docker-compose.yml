version: '3'
services:
  # auth_service:
  #   image: auth_service
  #   container_name: auth_service
  #   ports:
  #     - 8000:8000
  #   environment:
  #     - DB_HOST=postgresql
  #     - DB_PORT=5432
  #     - DB_USER=user
  #     - DB_PASSWORD=example
  #     - DB_TITLE=auth
  #     - BROKER_HOST=broker
  #     - BROKER_PORT=9092
  #     - JWT_TOKEN_LIFETIME_SECONDS=86400
  #     - JWT_SECRET=supa-secret
  #     - SERVE_PORT=8000
  #   depends_on:
  #     - postgresql
  #     - broker

  # task_tracking_service:
  #   image: task_tracking_service
  #   container_name: task_tracking_service
  #   ports:
  #     - 8001:8001
  #   environment:
  #     - AUTH_SERVICE_HOST=auth_service
  #     - AUTH_SERVICE_PORT=8000
  #     - DB_HOST=postgresql
  #     - DB_PORT=5432
  #     - DB_USER=user
  #     - DB_PASSWORD=example
  #     - DB_TITLE=task_tracker
  #     - BROKER_HOST=broker
  #     - BROKER_PORT=9092
  #     - SERVE_PORT=8001
  #   depends_on:
  #     - auth_service
  #     - postgresql
  #     - broker

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  broker:
    image: confluentinc/cp-server:5.4.1
    hostname: broker
    container_name: broker
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
      CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    ports:
      - 8082:8080
    environment:
      DYNAMIC_CONFIG_ENABLED: 'true'

  postgresql:
    image: postgres:16
    restart: always
    shm_size: 128mb
    container_name: postgresql
    environment:
      PG_DATA: /var/lib/postgresql/data
      POSTGRES_USER: user
      POSTGRES_PASSWORD: example
    ports:
      - 5432:5432
    volumes:
      - ./volume:/var/lib/postgresql/data

  postgresql-adminer:
    image: adminer
    restart: always
    container_name: postgresql-adminer
    ports:
      - 8080:8080
